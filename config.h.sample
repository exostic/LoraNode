#ifndef config_h
#define config_h

// -----------------------------------------------------------------------------
// Configuration
// -----------------------------------------------------------------------------


#define DEBUG

#define SKETCH_NAME "NodeManager"
#define SKETCH_VERSION "1.0"

// GPIO Configutation

#define INTERRUPT_PIN       1 

#ifdef BATTERY_SENSOR 
  #define BATTERY_PIN         A3
#endif

#ifdef CURRENT_SENSOR
  #define CURRENT_PIN         A1
#endif

#ifdef LEDS
  #define LED_PIN_1           A6 //8, A6
  #define LED_PIN_2           A7 //10, A7
#endif

#ifdef DIGIT_INPUT
  #define DIGIT_INPUT_PIN_1        A0
  #define DIGIT_INPUT_PIN_2        A1
#endif

#ifdef POWER_MANAGER
  #define VCC_PIN_1   7
  #define VCC_PIN_2   5 
  #define GND_PIN   6 
#endif

#define RFID_RST_PIN         4           
#define RFID_SS_PIN          4  

// Communications
#define SERIAL_BAUD         115200
#define SOFTSERIAL_RX_PIN   8 //3 , 8
#define SOFTSERIAL_TX_PIN   9 //4, 9
#define SOFTSERIAL_BAUD     9600
#define RN2483_RESET_PIN    10 //5, 10

// LoRaWAN Configuration
//#define ABP_AUTH
#define OTAA_AUTH
#define DEVADDR         "260126FC"
#define APPSKEY         ""
#define NWKSKEY         ""
#define APPEUI          ""
#define APPKEY          ""
#define FREQPLAN	FP_EU868

// Scheduling configuration 
// Sleep intervals of x milliseconds ( default = 10000 )
#define SLEEP_INTERVAL      10000
// Perform a sensor average reading every (x * SLEEP_INTERVAL ) ms (default = 6)
#define READING_COUNTS      3
// Send readings after x * READING_COUNTS ( default = 5 )
#define SENDING_COUNTS      2


// For a ECS1030-L72 CT
// Specs: 2000 turns ratio (T) without built-in burdenresistor
// Using 68 ohm burden resistor (R)
// A/V = T/R = 2000 * 68 = 29.41
// Real life comparisons showed a 10% bias with this value
// So I am using a correction factor
//#define CURRENT_RATIO       26.20

// For a YHDC SCT013
// Specs: 30A/1V
#define CURRENT_RATIO       30.00
// Number of samples to take for each reading
#define CURRENT_SAMPLES     1000
// Mains voltage to calculate apparent power
#define MAINS_VOLTAGE       230

// ADC precission
#define ADC_BITS            10
#define ADC_COUNTS          (1 << ADC_BITS)

// ADC reference volatge in V
#define ADC_REFERENCE       3.3

// Battery monitoring circuitry:
// Vi -- R1 -- A1 (Vo) -- R2 -- D12 (GND)
//
// These values have been measured with a multimeter:
// R1 = 470K
// R2 = 470k
//
// Formulae:
// Vo = Vi * R2 / (R1 + R2)
// Vi = Vo * (R1 + R2) / R2
// Vo = X * 3300 / 1024;
//
// Thus:
// Vi = X * 3300 * (470 + 470) / 1024 / 470;
#define BATTERY_RATIO       6.45


#endif

